AGOグループ業務プロファイリングシステム製品要求仕様書（PRD）

【プロジェクト概要】
AGOグループの業務データを体系的に整理し、「誰が」「どのような業務を」行っているかを可視化するプロファイリングシステムの構築。収集済み業務データ（メール、文書、ログ）を分析し、人物プロファイル、業務フロー、部門間連携を明らかにし、Obsidianで効率的に閲覧できる環境を提供する。

【技術アーキテクチャ】
- 開発言語: Python 3.9+
- IDE: Cursor (AI支援開発)
- データ処理: pandas, networkx
- 自然言語処理: spaCy
- 設定管理: PyYAML
- テンプレートエンジン: Jinja2
- 出力形式: Markdown (Obsidian用)
- バージョン管理: Git

【システム構成】
1. データ収集・前処理層
   - 収集済み生データ（メール、文書、ログ）の読み込み
   - データクレンジングと正規化
   - 構造化データへの変換

2. プロファイリングエンジン層
   - 人物プロファイリング機能
   - 業務フロー抽出機能
   - 部門間連携分析機能

3. 出力層
   - Obsidian用Markdownファイル生成
   - 双方向リンクとタグの自動生成
   - Mermaidダイアグラムによる可視化

【ディレクトリ構造】
ago-profiling/
├── data/
│   ├── raw/              # 収集済み生データ
│   │   ├── emails/       # メールデータ
│   │   ├── documents/    # 文書データ  
│   │   └── logs/         # ログデータ
│   └── processed/        # 処理済みデータ
├── scripts/              # 処理スクリプト
│   ├── extractors/       # データ抽出
│   ├── analyzers/        # 分析処理
│   └── generators/       # Markdown生成
├── output/               # Obsidian用出力
│   ├── profiles/         # 人物プロファイル
│   ├── workflows/        # 業務フロー
│   └── departments/      # 部門別整理
└── config/               # 設定ファイル

【データモデル定義】
Person（人物）エンティティ:
- id: 一意識別子
- name: 氏名
- department: 所属部門
- role: 役職
- email: メールアドレス
- activities: 業務活動リスト
- skills: スキル・専門領域
- collaborators: 協働者リスト

Activity（業務活動）エンティティ:
- id: 一意識別子
- type: 活動タイプ（メール送信、文書作成、会議など）
- timestamp: 日時
- participants: 参加者リスト
- content: 内容
- tags: タグリスト
- relatedDocuments: 関連文書

Workflow（業務フロー）エンティティ:
- id: 一意識別子
- name: フロー名
- owner: 責任者
- steps: ワークフローステップ
- frequency: 実行頻度
- dependencies: 依存関係

【機能要件】

1. データ準備機能
   - メール、文書、ログデータの読み込み
   - データの前処理とクレンジング
   - 構造化データへの変換
   - DataLoaderクラスの実装

2. 人物プロファイリング機能
   - 業務頻度分析（時系列での活動パターン分析）
   - 協働ネットワーク分析（頻繁にやり取りする相手の特定）
   - 専門領域推定（扱う文書・メールの内容から専門性を推定）
   - 責任範囲特定（主導している業務フローの特定）
   - PersonProfilerクラスの実装

3. 業務フロー抽出機能
   - パターン認識（繰り返される業務パターンの自動検出）
   - 依存関係分析（業務間の前後関係・依存関係の可視化）
   - ボトルネック検出（業務の滞留点の特定）
   - WorkflowAnalyzerクラスの実装

4. 部門間連携分析機能
   - コミュニケーションフロー分析
   - 情報伝達経路の可視化
   - 部門横断的な業務の特定

5. Obsidian出力機能
   - 人物プロファイルのMarkdown生成
   - 業務フローのMermaidダイアグラム生成
   - 双方向リンクの自動生成
   - タグによる横断的分類
   - テンプレートベースの出力

【非機能要件】

1. パフォーマンス
   - 大量データの効率的な処理
   - インクリメンタルな更新対応

2. 拡張性
   - プラグイン可能なアーキテクチャ
   - 新規データソースの追加容易性

3. セキュリティ
   - 個人情報のマスキング機能
   - アクセス権限管理
   - センシティブ情報の暗号化

4. 品質保証
   - データ検証スクリプト
   - プロファイル精度の評価機能
   - 単体テスト・統合テストの実装

【実装フェーズ】

フェーズ1: データ準備（1-2週間）
- DataLoaderクラスの実装
- データ読み込み機能
- 前処理機能
- テストデータでの動作確認

フェーズ2: 基本プロファイリング（2-3週間）
- PersonProfilerクラスの実装
- 人物抽出機能
- 活動分析機能
- Markdown生成機能
- 基本的な出力の確認

フェーズ3: 高度な分析（3-4週間）
- WorkflowAnalyzerクラスの実装
- パターン検出機能
- ワークフロー構築機能
- 可視化機能
- 統合テスト

【出力仕様】
各人物プロファイルは以下の形式でMarkdownファイルとして出力:
- 基本情報セクション（部門、役職、メール）
- 業務サマリーセクション（主要業務、活動頻度、主要協働者）
- 業務フローセクション（Mermaidダイアグラム）
- タグセクション（横断的な分類）

【追加機能提案】
1. Obsidian Dataviewプラグイン用のメタデータ付与
2. GitHub Actionsによる自動更新機能
3. AIによる業務改善提案機能
4. リアルタイムプロファイリング機能

【受け入れ基準】
1. 収集済みデータから人物プロファイルが自動生成される
2. 業務フローが正確に抽出され可視化される
3. Obsidianで効率的に情報を閲覧できる
4. 双方向リンクとタグが適切に機能する
5. 個人情報が適切に保護される
6. システムが安定して動作する